"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[211],{757:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>d,toc:()=>h});var i=s(4848),l=s(8453);const r={sidebar_position:3,description:"Description of Normalnvim plugins related to dev core."},c="3-dev-core.lua",d={id:"plugins/dev-core",title:"3-dev-core.lua",description:"Description of Normalnvim plugins related to dev core.",source:"@site/docs/plugins/dev-core.md",sourceDirName:"plugins",slug:"/plugins/dev-core",permalink:"/docs/plugins/dev-core",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Description of Normalnvim plugins related to dev core."},sidebar:"docsSidebar",previous:{title:"2-ui.lua",permalink:"/docs/plugins/ui"},next:{title:"4-dev.lua",permalink:"/docs/plugins/dev"}},o={},h=[{value:"List of plugins",id:"list-of-plugins",level:2},{value:"nvim-treesitter",id:"nvim-treesitter",level:2},{value:"ts-comments",id:"ts-comments",level:2},{value:"render-markdown",id:"render-markdown",level:2},{value:"nvim-highlight-colors",id:"nvim-highlight-colors",level:2},{value:"nvim-java",id:"nvim-java",level:2},{value:"mason-lspconfig",id:"mason-lspconfig",level:2},{value:"nvim-lspconfig",id:"nvim-lspconfig",level:2},{value:"mason",id:"mason",level:2},{value:"SchemaStore",id:"schemastore",level:2},{value:"none-ls-autoload",id:"none-ls-autoload",level:2},{value:"none-ls",id:"none-ls",level:2},{value:"garbage-day",id:"garbage-day",level:2},{value:"lazydev",id:"lazydev",level:2},{value:"nvim-cmp",id:"nvim-cmp",level:2},{value:"cmp-buffer",id:"cmp-buffer",level:2},{value:"cmp-path",id:"cmp-path",level:2},{value:"cmp-lsp",id:"cmp-lsp",level:2},{value:"cmp-luasnip",id:"cmp-luasnip",level:2}];function t(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"3-dev-corelua",children:"3-dev-core.lua"}),"\n",(0,i.jsx)(n.p,{children:"Plugins that are just there."}),"\n",(0,i.jsx)(n.h2,{id:"list-of-plugins",children:"List of plugins"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#nvim-treesitter",children:"nvim-treesitter"})," ",(0,i.jsx)(n.code,{children:"TREESITTER"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#ts-comments",children:"ts-comments"})," ",(0,i.jsx)(n.code,{children:"TREESITTER"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#render-markdown",children:"render-markdown"})," ",(0,i.jsx)(n.code,{children:"TREESITTER"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#nvim-highlight-colors",children:"nvim-highlight-colors"})," ",(0,i.jsx)(n.code,{children:"TREESITTER"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#nvim-java",children:"nvim-java"})," ",(0,i.jsx)(n.code,{children:"LSP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#mason-lspconfig",children:"mason-lspconfig"})," ",(0,i.jsx)(n.code,{children:"LSP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#nvim-lspconfig",children:"nvim-lspconfig"})," ",(0,i.jsx)(n.code,{children:"LSP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#mason",children:"mason"})," ",(0,i.jsx)(n.code,{children:"LSP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#schemastore",children:"SchemaStore"})," ",(0,i.jsx)(n.code,{children:"LSP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#none-ls-autoload",children:"none-ls-autoload"})," ",(0,i.jsx)(n.code,{children:"LSP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#none-ls",children:"none-ls"})," ",(0,i.jsx)(n.code,{children:"LSP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#garbage-day",children:"garbage-day"})," ",(0,i.jsx)(n.code,{children:"LSP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#lazydev",children:"lazydev"})," ",(0,i.jsx)(n.code,{children:"LSP"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#nvim-cmp",children:"nvim-cmp"})," ",(0,i.jsx)(n.code,{children:"AUTO-COMPLETION"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#cmp-buffer",children:"cmp-buffer"})," ",(0,i.jsx)(n.code,{children:"AUTO-COMPLETION"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#cmp-path",children:"cmp-path"})," ",(0,i.jsx)(n.code,{children:"AUTO-COMPLETION"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#cmp-lsp",children:"cmp-lsp"})," ",(0,i.jsx)(n.code,{children:"AUTO-COMPLETION"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#cmp-luasnip",children:"cmp-luasnip"})," ",(0,i.jsx)(n.code,{children:"AUTO-COMPLETION"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"nvim-treesitter",children:(0,i.jsx)(n.a,{href:"https://github.com/nvim-treesitter/nvim-treesitter",children:"nvim-treesitter"})}),"\n",(0,i.jsx)(n.p,{children:"Syntax highlighting manager for Neovim."}),"\n",(0,i.jsx)(n.h2,{id:"ts-comments",children:(0,i.jsx)(n.a,{href:"https://github.com/folke/ts-comments.nvim",children:"ts-comments"})}),"\n",(0,i.jsxs)(n.p,{children:["You can comment your code pressing the keys ",(0,i.jsx)(n.code,{children:"g + c + c"})," in normal mode."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Hint: Neovim already has this feature built-in. This plugin just improve language support."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"ts-comments screenshot",src:s(1266).A+"",width:"3840",height:"2160"})}),"\n",(0,i.jsx)(n.h2,{id:"render-markdown",children:(0,i.jsx)(n.a,{href:"https://github.com/echasnovski/render-markdown.nvim",children:"render-markdown"})}),"\n",(0,i.jsx)(n.p,{children:"Render markdown while in normal mode. Great for note taking!"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"render-markdown screenshot",src:s(7226).A+"",width:"3840",height:"2160"})}),"\n",(0,i.jsx)(n.h2,{id:"nvim-highlight-colors",children:(0,i.jsx)(n.a,{href:"https://github.com/aviaryan/nvim-highlight-colors",children:"nvim-highlight-colors"})}),"\n",(0,i.jsx)(n.p,{children:"Preview CSS colors in Neovim."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"nvim-highlight-colors screenshot",src:s(1002).A+"",width:"3840",height:"2160"})}),"\n",(0,i.jsx)(n.h2,{id:"nvim-java",children:(0,i.jsx)(n.a,{href:"https://github.com/neovim/nvim-java",children:"nvim-java"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"java"})," programming language require this plugin to be loaded before\n",(0,i.jsx)(n.code,{children:"nvim-lspconfig"}),". ",(0,i.jsx)(n.code,{children:"java"})," Is the only programming language that requires a dedicated plugin."]}),"\n",(0,i.jsx)(n.h2,{id:"mason-lspconfig",children:(0,i.jsx)(n.a,{href:"https://github.com/williamboman/mason-lspconfig.nvim",children:"mason-lspconfig"})}),"\n",(0,i.jsxs)(n.p,{children:["This plugin automatically start the LSP servers you have installed on the\npackage manager ",(0,i.jsx)(n.code,{children:"mason"})," for the current filetype."]}),"\n",(0,i.jsx)(n.h2,{id:"nvim-lspconfig",children:(0,i.jsx)(n.a,{href:"https://github.com/neovim/nvim-lspconfig",children:"nvim-lspconfig"})}),"\n",(0,i.jsx)(n.p,{children:"The plugin provide sane defaults for LSP servers, so you don't need to manually\nconfigure them."}),"\n",(0,i.jsx)(n.h2,{id:"mason",children:(0,i.jsx)(n.a,{href:"https://github.com/williamboman/mason.nvim",children:"mason"})}),"\n",(0,i.jsxs)(n.p,{children:["Mason is package manager for Neovim. You can use it to install/uninstall\n",(0,i.jsx)(n.code,{children:"LSP servers"}),", ",(0,i.jsx)(n.code,{children:"debuggers"}),", ",(0,i.jsx)(n.code,{children:"linters"}),", and ",(0,i.jsx)(n.code,{children:"formatters"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Press ",(0,i.jsx)(n.code,{children:"<Space> + p + m"})," to open mason."]}),"\n",(0,i.jsxs)(n.li,{children:["You can press ",(0,i.jsx)(n.code,{children:"ctrl+ f"})," to filter by programming language."]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Note: When you install NormalNvim using the automated installer, we install\nthe most common mason packages for you, so you don't need to worry about it."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"mason screenshot",src:s(8630).A+"",width:"3840",height:"2160"})}),"\n",(0,i.jsx)(n.h2,{id:"schemastore",children:(0,i.jsx)(n.a,{href:"https://github.com/b0o/SchemaStore.nvim",children:"SchemaStore"})}),"\n",(0,i.jsxs)(n.p,{children:["Adds new lints to ",(0,i.jsx)(n.code,{children:"YAML"})," and ",(0,i.jsx)(n.code,{children:"JSON"})," LSP servers when you edit well known files.\nLike ",(0,i.jsx)(n.code,{children:"tslint.json"})," and such. You can check all supported schemas ",(0,i.jsx)(n.a,{href:"https://www.schemastore.org/json/",children:"here"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"SchemaStore screenshot",src:s(3832).A+"",width:"3840",height:"2160"})}),"\n",(0,i.jsx)(n.h2,{id:"none-ls-autoload",children:(0,i.jsx)(n.a,{href:"https://github.com/jose-elias-alvarez/none-ls-autoload.nvim",children:"none-ls-autoload"})}),"\n",(0,i.jsxs)(n.p,{children:["This plugin automatically uses the plugin ",(0,i.jsx)(n.code,{children:"none-ls"})," to start the ",(0,i.jsx)(n.code,{children:"formatters"}),"\nand ",(0,i.jsx)(n.code,{children:"linters"})," you have installed on the package manager ",(0,i.jsx)(n.code,{children:"mason"})," for\nthe current filetype."]}),"\n",(0,i.jsx)(n.h2,{id:"none-ls",children:(0,i.jsx)(n.a,{href:"https://github.com/jose-elias-alvarez/none-ls.nvim",children:"none-ls"})}),"\n",(0,i.jsxs)(n.p,{children:["The plugin provide sane defaults for ",(0,i.jsx)(n.code,{children:"linters"})," and ",(0,i.jsx)(n.code,{children:"formatters"}),",\nso you don't need to manually configure them."]}),"\n",(0,i.jsx)(n.h2,{id:"garbage-day",children:(0,i.jsx)(n.a,{href:"https://github.com/simrat39/garbage-day",children:"garbage-day"})}),"\n",(0,i.jsx)(n.p,{children:"LSP garbage collector. This plugin temporarely stop LSP servers when you are not\nusing them and resume them when you go back to code to free memory."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"garbage-day screenshot",src:s(3812).A+"",width:"3840",height:"2160"})}),"\n",(0,i.jsx)(n.h2,{id:"lazydev",children:(0,i.jsx)(n.a,{href:"https://github.com/lazydev/lazydev.nvim",children:"lazydev"})}),"\n",(0,i.jsxs)(n.p,{children:["Useful to have code autocompletion when developing Neovim plugins in ",(0,i.jsx)(n.code,{children:"lua"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"nvim-cmp",children:(0,i.jsx)(n.a,{href:"https://github.com/hrsh7th/nvim-cmp",children:"nvim-cmp"})}),"\n",(0,i.jsx)(n.p,{children:"Auto-completion engine plugin."}),"\n",(0,i.jsx)(n.h2,{id:"cmp-buffer",children:(0,i.jsx)(n.a,{href:"https://github.com/hrsh7th/cmp-buffer",children:"cmp-buffer"})}),"\n",(0,i.jsxs)(n.p,{children:["Buffer completions for the plugin ",(0,i.jsx)(n.code,{children:"nvim-cmp"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"cmp-buffer screenshot",src:s(529).A+"",width:"3840",height:"2160"})}),"\n",(0,i.jsx)(n.h2,{id:"cmp-path",children:(0,i.jsx)(n.a,{href:"https://github.com/hrsh7th/cmp-path",children:"cmp-path"})}),"\n",(0,i.jsxs)(n.p,{children:["Path completions for the plugin ",(0,i.jsx)(n.code,{children:"nvim-cmp"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"cmp-path screenshot",src:s(8992).A+"",width:"3840",height:"2160"})}),"\n",(0,i.jsx)(n.h2,{id:"cmp-lsp",children:(0,i.jsx)(n.a,{href:"https://github.com/hrsh7th/cmp-lsp",children:"cmp-lsp"})}),"\n",(0,i.jsxs)(n.p,{children:["LSP completions for the plugin ",(0,i.jsx)(n.code,{children:"nvim-cmp"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"cmp-lsp screenshot",src:s(8318).A+"",width:"3840",height:"2160"})}),"\n",(0,i.jsx)(n.h2,{id:"cmp-luasnip",children:(0,i.jsx)(n.a,{href:"https://github.com/saadparwaiz1/cmp_luasnip",children:"cmp-luasnip"})}),"\n",(0,i.jsxs)(n.p,{children:["LuaSnip completions for the plugin ",(0,i.jsx)(n.code,{children:"nvim-cmp"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"cmp-luasnip screenshot",src:s(7607).A+"",width:"3840",height:"2160"})})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},529:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/cmp-buffer-f3de065fd5adeb1915cf95576629a2d1.webp"},8318:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/cmp-lsp-c681d362558c884cbad6ab96647da0d9.webp"},7607:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/cmp-luasnip-871ab5a0c4bc5b81cd98e047f203ac2d.webp"},8992:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/cmp-path-4e0aa22bff6d6a8ef31487810276859c.webp"},3812:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/garbage-day-372e655c3f28506e2fc4a5d1c56fe1d5.webp"},8630:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/mason-e2e69298ec5dc3c2ac7363d09395d8ff.webp"},1002:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/nvim-highlight-colors-d82851fde9a1221b0e780631eed38197.webp"},7226:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/render-markdown-94068891ad206af008d0e41d99ae0c8b.webp"},3832:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/schemastore-658c0527af2a131c94d6d9c457d43e8c.webp"},1266:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/ts-comments-29fa645d533afeef10bc4c6c53ee5054.webp"},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>d});var i=s(6540);const l={},r=i.createContext(l);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);